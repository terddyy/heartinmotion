// Flexbox mixins
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

// Media query mixins
@mixin respond-to($breakpoint) {
    @if $breakpoint == sm {
        @media (min-width: $breakpoint-sm) { @content; }
    }
    @if $breakpoint == md {
        @media (min-width: $breakpoint-md) { @content; }
    }
    @if $breakpoint == lg {
        @media (min-width: $breakpoint-lg) { @content; }
    }
    @if $breakpoint == xl {
        @media (min-width: $breakpoint-xl) { @content; }
    }
}

// Glass effect mixin
@mixin glass-effect($opacity: 0.1) {
    background: rgba($color-white, $opacity);
    backdrop-filter: blur(5px);
    border-radius: $border-radius-lg;
}

// Text shadow mixin
@mixin text-shadow($size: 'md') {
    @if $size == 'sm' {
        text-shadow: 1px 1px 2px rgba($color-black, 0.2);
    }
    @if $size == 'md' {
        text-shadow: 2px 2px 4px rgba($color-black, 0.3);
    }
    @if $size == 'lg' {
        text-shadow: 3px 3px 6px rgba($color-black, 0.4);
    }
}

// Button styles mixin
@mixin button-style($variant: 'primary') {
    padding: $spacing-sm $spacing-md;
    border-radius: $border-radius-sm;
    transition: $transition-base;
    font-weight: bold;
    
    @if $variant == 'primary' {
        background: $color-primary;
        color: $color-white;
        &:hover {
            transform: translateY(-2px);
            box-shadow: $shadow-md;
        }
    }
    @if $variant == 'ghost' {
        background: rgba($color-white, 0.1);
        color: $color-white;
        border: 1px solid rgba($color-white, 0.2);
        &:hover {
            background: rgba($color-white, 0.2);
        }
    }
}

// Fixed fullscreen background
@mixin fixed-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: $z-index-background;
} 